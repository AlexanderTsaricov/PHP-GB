server {
    # Указываем 80 порт для соединения
    listen 80;

    # Доменное имя, которому принадлежит конфиг
    server_name mysite.local;

    #Задаем корневую директорию
    root /data/mysite.local;

    # Стартовый файл
    index index.php index.html;

    # При обращении к статическим файлам логи не нужны, также как и обращение к fpm
    # http://mysite.local/static/some.png - Это пример того, как работает правило
    # Если кто-то откроет http://mysite.local/static/some.png, nginx увидит .png и применит настройки:
    # Не будет писать лог в файл
    # Скажет браузеру запомнить картинку навсегда
    # location — это правило, которое говорит nginx, что делать с запросами
    # ~* — означает "ищи по шаблону" (регулярное выражение), но без учета регистра (например, .JPG и .jpg — одно и то же)

    location ~* .(jpg|jpeg|gif|css|png|js|ico|html)$ { # Символ $ в регулярных выражениях означает "конец строки".
        access_log off; # отключат запись запросов в лог файлы
        expires max; # Говорит браузеру кэшировать файлы максимально долго, что ускоряет загрузку сайта при повторном входе
    }

    # Единая точка доступа
    # Все запросы отправляются в корневую директорию root на index.php
    # Что делает код: Если файл или папка существует — отдай их, иначе отправь запрос на index.php
    location /{ # Здесь / означает "все запросы". Например: mysite.local/about.html
        # try_files: если есть $uri -> отдай его, если есть папка $uri -> открой её
        # Что за $uri и почему два раза?
        # $uri — это просто переменная, но не обычная, а встроенная в nginx.
        # $uri	Это путь, который ввел пользователь. Например, /about.html.
        # $uri/	Это тот же путь, но проверяем, есть ли папка с таким именем. Например, /blog/.
        # $query_string — это переменная в nginx, которая содержит все параметры запроса (все, что после ? в URL).
        try_files $uri $uri/ /index.php?$query_string;
    } 

    # Правило обращения к php_fpm
    location ~* .php$ { # объявление правила запросов, если запрос заканчивается на .php то он пользуется этим правилом
        try_files $uri = 404; # try_files — проверка существования файлов, если файла нет то сразу отправляется код ошибки


        # fastcgi_split_path_info - Это команда nginx, которая разделяет путь запроса на две части:
        #   1. Сам PHP-скрипт (например, /index.php).
        #   2. Оставшуюся часть пути (например, /some/extra/path).
        # ^(.+.php)(/.+)$ — регулярное выражение
        # ^	Начало строки (URL)
        # (.+.php)	Первая группа (PHP-скрипт)
        # (/.+)	Вторая группа (оставшаяся часть пути)
        # $	Конец строки (URL)

        #(.+.php) — первая группа (PHP-скрипт)
        # .+ → "любой символ (кроме \n), как минимум один раз".
        # .php → файл должен заканчиваться на .php.

        #(/.+) — вторая группа (оставшаяся часть пути)
        # / → путь должен начинаться с /.
        # .+ → после / должен быть хотя бы один символ.

        # Первая группа ((.+.php)) → путь к самому PHP-файлу (index.php).
        # # Вторая группа ((/.+)) → оставшаяся часть (/hello/world).
        fastcgi_split_path_info ^(.+.php)(/.+)$;


        # fastcgi_pass Это директива nginx, которая говорит: "Отправь этот запрос FastCGI-серверу, который обработает его и вернет результат."
        # FastCGI — это протокол, с помощью которого nginx передает запросы PHP-FPM (процессу, который исполняет PHP-код).
        # nginx сам не умеет выполнять PHP-код, поэтому он передает запрос на отдельный сервер (FastCGI/PHP-FPM), который его обработает.
        # app — это имя хоста (контейнера или сервера), на котором запущен PHP-FPM.
        # Если используется Docker, то app — это имя контейнера с PHP-FPM.
        # Если обычный сервер, можно написать 127.0.0.1 или localhost.
        # 9000 - Это порт, на котором PHP-FPM слушает входящие запросы.
        # Это дефолтный порт для PHP-FPM, когда он работает через TCP/IP
        # Можно изменить в файле конфигурации PHP-FPM (php-fpm.conf).
        fastcgi_pass app:9000;


        ## Это альтернативный вариант передачи запросов PHP-FPM.
        ##  Лектор закомментировал его, потому что используется другой способ (через порт 9000).
        ## Этот вариант говорит nginx: "Отправляй запросы PHP-FPM через Unix-сокет."
        ## Unix-сокет - Это специальный файл в системе (/var/run/php-fpm.sock), через который два процесса (nginx и PHP-FPM) могут общаться напрямую.
        # fastcgi_pass unix: /var/run/php-fpm.sock;


        # fastcgi_index - Это директива nginx, которая говорит: "Если запрос пришел в папку, но без указания конкретного файла, то загрузи index.php."
        fastcgi_index index.php;


        # fastcgi_param - это команда в nginx, которая передает параметры в FastCGI (PHP-FPM)
        # FastCGI (PHP-FPM) ожидает определенные параметры, чтобы понять, какой PHP-файл нужно запустить и какие данные ему передать.
        # Пример
        # Когда пользователь заходит на http://mysite.local/index.php?user=123,
        #   nginx передает PHP-FPM информацию о том, какой файл нужно обработать и какие параметры переданы (?user=123).
        # SCRIPT_FILENAME - Это переменная, которая указывает PHP-FPM полный путь к исполняемому PHP-файлу.
        # SCRIPT_FILENAME передает полный путь к PHP-файлу, который нужно запустить.
        #   Без него PHP-FPM не поймет, что делать.
        # $document_root → путь к корневой папке сайта (задан в root).
        # $fastcgi_script_name → имя запрашиваемого PHP-файла (например, /index.php)
        # Вся строка - Она передает PHP-FPM полный путь к исполняемому PHP-файлу.
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;


        # Эта строка подключает (include) набор стандартных параметров для FastCGI (PHP-FPM).
        # fastcgi_params — это специальный файл конфигурации nginx, в котором уже заданы стандартные переменные для передачи данных PHP-FPM.
        # Вместо того чтобы писать их вручную в каждом конфиге, nginx позволяет просто подключить готовый файл с параметрами.
        # include — это директива в nginx, которая вставляет содержимое указанного файла в конфиг.
        # fastcgi_params - Это файл конфигурации nginx, в котором уже прописаны стандартные переменные для работы с PHP-FPM.
        include fastcgi_params;
    }

}